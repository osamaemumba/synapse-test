{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "osama-test"
		},
		"SynapseAnalyticsSQLPoolLinkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SynapseAnalyticsSQLPoolLinkedservice'"
		},
		"osama-test-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'osama-test-WorkspaceDefaultSqlServer'"
		},
		"purviewUserSynaseLinkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'purviewUserSynaseLinkedservice'"
		},
		"AzureBlobStorageNYCSink_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "blobConnectionString"
		},
		"AzureDataLakeNYC_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().Datalake_name}"
		},
		"HttpServerNYCTaxi_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://nytaxiblob.blob.core.windows.net/"
		},
		"KeyVaultLinkedService_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "@{linkedService().Keyvault_Name}"
		},
		"osama-test-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://osamatestdls.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Create_Purview_MSI_User')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Create Purview User Stored Procedure",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "IF NOT EXISTS (SELECT * FROM sys.procedures WHERE name = 'createPurviewUserSp')\nBEGIN\nEXEC('CREATE PROCEDURE createPurviewUserSp\nAS\nCREATE USER [@{pipeline().parameters.Purview_Account_Name}] FROM EXTERNAL PROVIDER\nEXEC sp_addrolemember [db_datareader], [@{pipeline().parameters.Purview_Account_Name}]')\nselect Count(*) from sys.symmetric_keys;\nEND\nELSE\nBEGIN\n    select Count(*) from sys.symmetric_keys;\nEND",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "purviewUserSynapseDataset",
								"type": "DatasetReference",
								"parameters": {
									"Purview_Account_Name": {
										"value": "@pipeline().parameters.Purview_Account_Name",
										"type": "Expression"
									},
									"ServerFQDN": {
										"value": "@pipeline().parameters.ServerFQDN",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Execute Purview User Stored Procedure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Create Purview User Stored Procedure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[dbo].[createPurviewUserSp]"
						},
						"linkedServiceName": {
							"referenceName": "purviewUserSynaseLinkedservice",
							"type": "LinkedServiceReference",
							"parameters": {
								"ServerFQDN": {
									"value": "@pipeline().parameters.ServerFQDN",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Purview_Account_Name": {
						"type": "string",
						"defaultValue": "purview-for-synapse-test-account-2"
					},
					"ServerFQDN": {
						"type": "string",
						"defaultValue": "osama-test.sql.azuresynapse.net"
					}
				},
				"folder": {
					"name": "Create_Purview_MSI_User"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/purviewUserSynapseDataset')]",
				"[concat(variables('workspaceId'), '/linkedServices/purviewUserSynaseLinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NYC_Pipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.RelativeUrl",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "NYC_Data_Copy_Blob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "NYC_Source_Data",
											"type": "DatasetReference",
											"parameters": {
												"RelativeUrlValue": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "NYC_Taxi_Blob_Sink",
											"type": "DatasetReference",
											"parameters": {
												"Blobstorage_Name": {
													"value": "@pipeline().parameters.Blobstorage_Name",
													"type": "Expression"
												},
												"Keyvault_Name": {
													"value": "@pipeline().parameters.Keyvault_Name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "NYC_Data_Copy_ADLS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "2013/Weather",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "NYC_Taxi_Blob_Source",
								"type": "DatasetReference",
								"parameters": {
									"Blobstorage_Name": {
										"value": "@pipeline().parameters.Blobstorage_Name",
										"type": "Expression"
									},
									"Keyvault_Name": {
										"value": "@pipeline().parameters.Keyvault_Name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "NYC_Taxi_ADLS_Sink",
								"type": "DatasetReference",
								"parameters": {
									"Datalake_Name": {
										"value": "@pipeline().parameters.Datalake_Name",
										"type": "Expression"
									},
									"Keyvault_Name": {
										"value": "@pipeline().parameters.Keyvault_Name",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "NYC_Data_Copy_SQLPool",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Create_Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "2013/Weather",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": {
									"value": "IF EXISTS (SELECT * FROM sys.tables WHERE name = '[NYC_Taxi_Data_Schema].[NYC_Taxi_Data_Table]')\nBEGIN\nEXEC('DROP TABLE [NYC_Taxi_Data_Schema].[NYC_Taxi_Data_Table]\nCREATE TABLE [NYC_Taxi_Data_Schema].[NYC_Taxi_Data_Table]\n(\n    [DateID] int NOT NULL,\n    [GeographyID] int NOT NULL,\n    [PrecipitationInches] float NOT NULL,\n    [AvgTemperatureFahrenheit] float NOT NULL\n)')\nselect Count(*) from sys.symmetric_keys;\nEND\nELSE\nBEGIN\nCREATE TABLE [NYC_Taxi_Data_Schema].[NYC_Taxi_Data_Table]\n(\n    [DateID] int NOT NULL,\n    [GeographyID] int NOT NULL,\n    [PrecipitationInches] float NOT NULL,\n    [AvgTemperatureFahrenheit] float NOT NULL\n)\nselect Count(*) from sys.symmetric_keys;\nEND",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "DateID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "GeographyID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "PrecipitationInches",
											"type": "Single",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "AvgTemperatureFahrenheit",
											"type": "Single",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "NYC_ADLS_Taxi_Source",
								"type": "DatasetReference",
								"parameters": {
									"Datalake_Name": {
										"value": "@pipeline().parameters.Datalake_Name",
										"type": "Expression"
									},
									"Keyvault_Name": {
										"value": "@pipeline().parameters.Keyvault_Name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "NYC_Taxi_Data_Table",
								"type": "DatasetReference",
								"parameters": {
									"Keyvault_Name": {
										"value": "@pipeline().parameters.Keyvault_Name",
										"type": "Expression"
									},
									"SQLLoginUsername": {
										"value": "@pipeline().parameters.SQLLoginUsername",
										"type": "Expression"
									},
									"ServerFQDN": {
										"value": "@pipeline().parameters.ServerFQDN",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Create_Schema",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "NYC_Data_Copy_ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'NYC_Taxi_Data_Schema')\nBEGIN\nEXEC('CREATE SCHEMA NYC_Taxi_Data_Schema')\nselect Count(*) from sys.symmetric_keys;\nEND\nELSE\nBEGIN\n    select Count(*) from sys.symmetric_keys;\nEND",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "NYC_Taxi_Data_Schema",
								"type": "DatasetReference",
								"parameters": {
									"SQLLoginUsername": {
										"value": "@pipeline().parameters.SQLLoginUsername",
										"type": "Expression"
									},
									"ServerFQDN": {
										"value": "@pipeline().parameters.ServerFQDN",
										"type": "Expression"
									},
									"Keyvault_Name": {
										"value": "@pipeline().parameters.Keyvault_Name",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"RelativeUrl": {
						"type": "array",
						"defaultValue": [
							"2013/Weather/QID6431_20171107_10617_0.txt",
							"2013/Weather/QID6431_20171107_10617_1.txt",
							"2013/Weather/QID6431_20171107_10617_2.txt",
							"2013/Weather/QID6431_20171107_10617_3.txt",
							"2013/Weather/QID6431_20171107_10617_4.txt",
							"2013/Weather/QID6431_20171107_10617_5.txt",
							"2013/Weather/QID6431_20171107_10617_6.txt",
							"2013/Weather/QID6431_20171107_10617_7.txt",
							"2013/Weather/QID6431_20171107_10617_8.txt",
							"2013/Weather/QID6431_20171107_10617_9.txt",
							"2013/Weather/QID6431_20171107_10617_10.txt"
						]
					},
					"Datalake_Name": {
						"type": "string",
						"defaultValue": "<adls>"
					},
					"Blobstorage_Name": {
						"type": "string",
						"defaultValue": "<sa>"
					},
					"Keyvault_Name": {
						"type": "string",
						"defaultValue": "<kv>"
					},
					"SQLLoginUsername": {
						"type": "string",
						"defaultValue": "<sqllogin>"
					},
					"ServerFQDN": {
						"type": "string",
						"defaultValue": "<server>"
					}
				},
				"folder": {
					"name": "NYC_Taxi_Data_Loading"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-16T08:16:50Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/NYC_Taxi_Blob_Source')]",
				"[concat(variables('workspaceId'), '/datasets/NYC_Taxi_ADLS_Sink')]",
				"[concat(variables('workspaceId'), '/datasets/NYC_ADLS_Taxi_Source')]",
				"[concat(variables('workspaceId'), '/datasets/NYC_Taxi_Data_Table')]",
				"[concat(variables('workspaceId'), '/datasets/NYC_Taxi_Data_Schema')]",
				"[concat(variables('workspaceId'), '/datasets/NYC_Source_Data')]",
				"[concat(variables('workspaceId'), '/datasets/NYC_Taxi_Blob_Sink')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NYC_ADLS_Taxi_Source')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeNYC",
					"type": "LinkedServiceReference",
					"parameters": {
						"Datalake_name": {
							"value": "@dataset().Datalake_Name",
							"type": "Expression"
						},
						"Keyvault_Name": {
							"value": "@dataset().Keyvault_Name",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Datalake_Name": {
						"type": "string"
					},
					"Keyvault_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "nyctaxi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeNYC')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NYC_Source_Data')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServerNYCTaxi",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"RelativeUrlValue": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().RelativeUrlValue",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/HttpServerNYCTaxi')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NYC_Taxi_ADLS_Sink')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeNYC",
					"type": "LinkedServiceReference",
					"parameters": {
						"Datalake_name": {
							"value": "@dataset().Datalake_Name",
							"type": "Expression"
						},
						"Keyvault_Name": {
							"value": "@dataset().Keyvault_Name",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Datalake_Name": {
						"type": "string"
					},
					"Keyvault_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "2013/Weather",
						"fileSystem": "nyctaxi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeNYC')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NYC_Taxi_Blob_Sink')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageNYCSink",
					"type": "LinkedServiceReference",
					"parameters": {
						"Blobstorage_Name": {
							"value": "@dataset().Blobstorage_Name",
							"type": "Expression"
						},
						"Keyvault_Name": {
							"value": "@dataset().Keyvault_Name",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Blobstorage_Name": {
						"type": "string"
					},
					"Keyvault_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "nyctaxi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorageNYCSink')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NYC_Taxi_Blob_Source')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageNYCSink",
					"type": "LinkedServiceReference",
					"parameters": {
						"Blobstorage_Name": {
							"value": "@dataset().Blobstorage_Name",
							"type": "Expression"
						},
						"Keyvault_Name": {
							"value": "@dataset().Keyvault_Name",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Blobstorage_Name": {
						"type": "string"
					},
					"Keyvault_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "nyctaxi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorageNYCSink')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NYC_Taxi_Data_Schema')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SynapseAnalyticsSQLPoolLinkedservice",
					"type": "LinkedServiceReference",
					"parameters": {
						"SQLLoginUsername": {
							"value": "@dataset().SQLLoginUsername",
							"type": "Expression"
						},
						"Keyvault_Name": {
							"value": "@dataset().Keyvault_Name",
							"type": "Expression"
						},
						"ServerFQDN": {
							"value": "@dataset().ServerFQDN",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"SQLLoginUsername": {
						"type": "string"
					},
					"ServerFQDN": {
						"type": "string"
					},
					"Keyvault_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SynapseAnalyticsSQLPoolLinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NYC_Taxi_Data_Table')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SynapseAnalyticsSQLPoolLinkedservice",
					"type": "LinkedServiceReference",
					"parameters": {
						"SQLLoginUsername": {
							"value": "@dataset().SQLLoginUsername",
							"type": "Expression"
						},
						"Keyvault_Name": {
							"value": "@dataset().Keyvault_Name",
							"type": "Expression"
						},
						"ServerFQDN": {
							"value": "@dataset().ServerFQDN",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Keyvault_Name": {
						"type": "string"
					},
					"SQLLoginUsername": {
						"type": "string"
					},
					"ServerFQDN": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "NYC_Taxi_Data_Schema",
					"table": "NYC_Taxi_Data_Table"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SynapseAnalyticsSQLPoolLinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/purviewUserSynapseDataset')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "purviewUserSynaseLinkedservice",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerFQDN": {
							"value": "@dataset().ServerFQDN",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Purview_Account_Name": {
						"type": "string"
					},
					"ServerFQDN": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/purviewUserSynaseLinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureBlobStorageNYCSink')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"Blobstorage_Name": {
						"type": "string"
					},
					"Keyvault_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVaultLinkedService",
							"type": "LinkedServiceReference",
							"parameters": {
								"Keyvault_Name": {
									"value": "@linkedService().Keyvault_Name",
									"type": "Expression"
								}
							}
						},
						"secretName": "[parameters('AzureBlobStorageNYCSink_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/KeyVaultLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeNYC')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"Datalake_name": {
						"type": "string"
					},
					"Keyvault_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeNYC_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVaultLinkedService",
							"type": "LinkedServiceReference",
							"parameters": {
								"Keyvault_Name": {
									"value": "@linkedService().Keyvault_Name",
									"type": "Expression"
								}
							}
						},
						"secretName": "dlsAccessKey"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/KeyVaultLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HttpServerNYCTaxi')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServerNYCTaxi_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KeyVaultLinkedService')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"Keyvault_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyVaultLinkedService_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SynapseAnalyticsSQLPoolLinkedservice')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"SQLLoginUsername": {
						"type": "string"
					},
					"Keyvault_Name": {
						"type": "string"
					},
					"ServerFQDN": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('SynapseAnalyticsSQLPoolLinkedservice_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVaultLinkedService",
							"type": "LinkedServiceReference",
							"parameters": {
								"Keyvault_Name": {
									"value": "@linkedService().Keyvault_Name",
									"type": "Expression"
								}
							}
						},
						"secretName": "SQLLoginPassword"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/KeyVaultLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/osama-test-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('osama-test-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/osama-test-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('osama-test-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/purviewUserSynaseLinkedservice')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"ServerFQDN": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('purviewUserSynaseLinkedservice_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/demoSQLPool')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"restorePointInTime": "0001-01-01T00:00:00",
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus2"
		}
	]
}